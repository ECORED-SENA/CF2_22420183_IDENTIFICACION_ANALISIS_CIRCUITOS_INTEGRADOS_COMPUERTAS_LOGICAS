{"version":3,"sources":["webpack:///./src/assets/curso/temas/18.png","webpack:///./src/assets/curso/temas/7.svg","webpack:///./src/assets/curso/temas/11.svg","webpack:///./src/assets/curso/temas/13.svg","webpack:///./src/assets/curso/temas/17.svg","webpack:///./src/assets/curso/temas/15.svg","webpack:///./src/assets/curso/temas/16.svg","webpack:///./src/assets/curso/temas/12.svg","webpack:///./src/assets/curso/temas/14.svg","webpack:///./src/assets/curso/temas/19.png","webpack:///./src/views/Tema2.vue","webpack:///src/views/Tema2.vue","webpack:///./src/views/Tema2.vue?3696","webpack:///./src/views/Tema2.vue?158f"],"names":["module","exports","render","_vm","this","_c","_self","staticClass","_m","staticRenderFns","attrs","_v","staticStyle","require","name","data","mounted","$nextTick","$aosRefresh","updated","component"],"mappings":"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","file":"js/tema2.1fa56a3f.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/18.49c3f7d2.png\";","module.exports = __webpack_public_path__ + \"img/7.d8bab63f.svg\";","module.exports = __webpack_public_path__ + \"img/11.c59dd6ba.svg\";","module.exports = __webpack_public_path__ + \"img/13.0f265538.svg\";","module.exports = __webpack_public_path__ + \"img/17.93086532.svg\";","module.exports = __webpack_public_path__ + \"img/15.020dd7b5.svg\";","module.exports = __webpack_public_path__ + \"img/16.f9292b28.svg\";","module.exports = __webpack_public_path__ + \"img/12.1f880225.svg\";","module.exports = __webpack_public_path__ + \"img/14.edaa1ccb.svg\";","module.exports = __webpack_public_path__ + \"img/19.534c429f.png\";","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"curso-main-container pb-3\"},[_c('BannerInterno'),_vm._m(0)],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5\"},[_c('div',{staticClass:\"titulo-principal color-acento-contenido\",attrs:{\"data-aos\":\"flip-up\"}},[_c('div',{staticClass:\"titulo-principal__numero\"},[_c('span',[_vm._v(\"2\")])]),_c('h1',[_vm._v(\"Sistema binario\")])]),_c('div',{staticClass:\"row justify-content-center mb-5 g-0\"},[_c('div',{staticClass:\"col-lg-12 mb-lg-0 mb-3\",attrs:{\"data-aos\":\"fade-down\"}},[_c('div',{staticClass:\"p-4 h-100\",staticStyle:{\"background-color\":\"#F5E5FE\"}},[_c('div',{staticClass:\"row justify-content-center align-items-center mb-3\"},[_c('div',{staticClass:\"col-lg mb-lg-0 mb-3 order-2\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"El sistema binario utiliza solo dos dígitos (0 y 1) para representar cualquier número. Es el sistema que se utiliza como lenguaje para los sistemas electrónicos, gracias a los dos estados o niveles lógicos que se encuentran en los circuitos integrados: abierto o cerrado (1 o 0 lógico).\")])]),_c('div',{staticClass:\"col-lg-auto mb-lg-0 mb-3\"},[_c('img',{staticStyle:{\"width\":\"85px\"},attrs:{\"src\":require(\"@/assets/curso/temas/11.svg\"),\"alt\":\"\"}})])])])])]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10\"},[_c('div',{staticClass:\"titulo-sexto color-acento-contenido\",attrs:{\"data-aos\":\"fade-right\"}},[_c('h5',[_vm._v(\"Figura 1. \")]),_c('span',[_c('i',[_vm._v(\"Niveles de voltaje en lógica digital\")])])]),_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/12.svg\"),\"alt\":\"Texto alternativo: La imagen muestra los niveles de voltaje lógico en un sistema digital alimentado por VCC. Un nivel alto, representado como 1 - Lógico, se encuentra entre 3.5 V y 5.0 V. Entre 0.8 V y 3.5 V, el voltaje es No Definido, mientras que un nivel bajo, representado como 0 - Lógico, se encuentra entre 0.0 V y 0.8 V. \",\"data-aos\":\"fade-left\"}})])]),_c('p',{staticClass:\"mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"En la electrónica tradicional se usan 5 voltios para el dígito '1' y 0 voltios para el dígito '0'.\")]),_c('div',{staticClass:\"tarjeta p-5 mb-4\",staticStyle:{\"background-color\":\"#D4F0E0\"}},[_c('p',{staticClass:\"mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"Ejemplo. Representar 2158 (decimal) en binario\")]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10\"},[_c('div',{staticClass:\"titulo-sexto color-acento-contenido\",attrs:{\"data-aos\":\"fade-right\"}},[_c('h5',[_vm._v(\"Figura 2. \")]),_c('span',[_c('i',[_vm._v(\"Conversión de un número decimal a binario\")])])]),_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/13.svg\"),\"alt\":\"Texto alternativo: La figura presenta un diagrama donde se convierte el número decimal 2158 a binario. El proceso muestra una serie de divisiones entre 2\",\"data-aos\":\"fade-up\"}})])])]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10\",attrs:{\"data-aos\":\"fade-down\"}},[_c('div',{staticClass:\"p-4\",staticStyle:{\"background-color\":\"#E9F7EF\"}},[_c('p',{staticClass:\"mb-4\"},[_vm._v(\"El procedimiento para convertir un número decimal a binario utilizando divisiones sucesivas por 2 es el siguiente:\")]),_c('ol',{staticClass:\"lista-ol--cuadro\"},[_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',{staticStyle:{\"color\":\"#12263F\",\"font-weight\":\"bold\"}},[_vm._v(\"1.\")])]),_vm._v(\"Se divide el número decimal entre 2, obteniendo el cociente y el resto. El resto será uno de los dígitos del número binario.\")]),_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',{staticStyle:{\"color\":\"#12263F\",\"font-weight\":\"bold\"}},[_vm._v(\"2.\")])]),_vm._v(\"Si el resto es 0, se registra un 0 como dígito binario; si el resto es 1, se registra un 1.\")]),_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',{staticStyle:{\"color\":\"#12263F\",\"font-weight\":\"bold\"}},[_vm._v(\"3.\")])]),_vm._v(\"El cociente de la división se toma como el nuevo número decimal.\")]),_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',{staticStyle:{\"color\":\"#12263F\",\"font-weight\":\"bold\"}},[_vm._v(\"4.\")])]),_vm._v(\"Se repite el proceso dividiendo nuevamente por 2, registrando los restos como los dígitos binarios.\")]),_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',{staticStyle:{\"color\":\"#12263F\",\"font-weight\":\"bold\"}},[_vm._v(\"5.\")])]),_vm._v(\"El procedimiento finaliza cuando el cociente alcanza el valor de 0. Los restos obtenidos se leen de abajo hacia arriba para formar el número binario.\")])])])])]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-4 mb-lg-0 mb-3\",attrs:{\"data-aos\":\"fade-right\"}},[_c('div',{staticClass:\"tarjeta p-5 hover h-100\"},[_c('div',{staticClass:\"row justify-content-center align-items-center\"},[_c('div',{staticClass:\"col-lg mb-lg-0 mb-3 order-2\"},[_c('p',{staticClass:\"mb-0 fw-bold\"},[_vm._v(\"Divida el número decimal por 2.\")])]),_c('div',{staticClass:\"col-lg-auto mb-lg-0 mb-3\"},[_c('img',{staticStyle:{\"width\":\"30px\"},attrs:{\"src\":require(\"@/assets/curso/temas/14.svg\"),\"alt\":\"\"}})])])])]),_c('div',{staticClass:\"col-lg-4 mb-lg-0 mb-3\",attrs:{\"data-aos\":\"fade-up\"}},[_c('div',{staticClass:\"tarjeta p-5 hover h-100\"},[_c('div',{staticClass:\"row justify-content-center align-items-center\"},[_c('div',{staticClass:\"col-lg mb-lg-0 mb-3 order-2\"},[_c('p',{staticClass:\"mb-0 fw-bold\"},[_vm._v(\"Si hay resto, escriba 1; si no, 0.\")])]),_c('div',{staticClass:\"col-lg-auto mb-lg-0 mb-3\"},[_c('img',{staticStyle:{\"width\":\"30px\"},attrs:{\"src\":require(\"@/assets/curso/temas/15.svg\"),\"alt\":\"\"}})])])])]),_c('div',{staticClass:\"col-lg-4 mb-lg-0 mb-3\",attrs:{\"data-aos\":\"fade-down\"}},[_c('div',{staticClass:\"tarjeta p-5 hover h-100\"},[_c('div',{staticClass:\"row justify-content-center align-items-center\"},[_c('div',{staticClass:\"col-lg mb-lg-0 mb-3 order-2\"},[_c('p',{staticClass:\"mb-0 fw-bold\"},[_vm._v(\"Continúe hasta que no quede número decimal.\")])]),_c('div',{staticClass:\"col-lg-auto mb-lg-0 mb-3\"},[_c('img',{staticStyle:{\"width\":\"30px\"},attrs:{\"src\":require(\"@/assets/curso/temas/16.svg\"),\"alt\":\"\"}})])])])])]),_c('div',{staticClass:\"titulo-tres\"},[_c('h3',[_vm._v(\"Álgebra de Boole\")])]),_c('p',{staticClass:\"mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"El álgebra de Boole se utiliza para programar circuitos integrados a través de números binarios y realizar operaciones binarias. Esto permite predecir el comportamiento en la entrada y salida del circuito.\"),_c('br'),_c('br'),_vm._v(\"Incluye tres operaciones fundamentales:\")]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10\"},[_c('div',{staticClass:\"titulo-sexto color-acento-contenido\",attrs:{\"data-aos\":\"fade-right\"}},[_c('h5',[_vm._v(\"Tabla 3. \")]),_c('span',[_c('i',[_vm._v(\"Operaciones lógicas básicas\")])])]),_c('div',{staticClass:\"tabla-a color-acento-contenido mb-5\",attrs:{\"data-aos\":\"fade-left\"}},[_c('table',{staticClass:\"text-center\"},[_c('thead',{staticStyle:{\"background-color\":\"#F3F8FF\"}},[_c('tr',[_c('th',[_vm._v(\"Operación +\")]),_c('th',[_vm._v(\"Operación ⋅ o ∗\")]),_c('th',[_vm._v(\"Operación de negación\")])])]),_c('tbody',{staticClass:\"bg-white\"},[_c('tr',[_c('td',[_vm._v(\"(Es el mismo símbolo de la suma que usualmente usamos, pero no es la misma operación)\")]),_c('td',[_vm._v(\"(Es el mismo símbolo del producto o multiplicación que usualmente usamos, pero no es la misma operación)\")]),_c('td',[_vm._v(\"(Permite invertir o negar el estado lógico, \"),_c('em',[_vm._v(\"bit\")]),_vm._v(\" o dígito así)\")])]),_c('tr',[_c('td',[_vm._v(\"Entradas | Salida\")]),_c('td',[_vm._v(\"Entradas | Salida\")]),_c('td',[_vm._v(\"Entradas | Salida\")])]),_c('tr',[_c('td',[_vm._v(\"A + B = C\"),_c('br'),_c('br'),_vm._v(\"0 + 0 = 0\"),_c('br'),_c('br'),_vm._v(\"0 + 1 = 1\"),_c('br'),_c('br'),_vm._v(\"1 + 0 = 1\"),_c('br'),_c('br'),_vm._v(\"1 + 1 = 1\")]),_c('td',[_vm._v(\"A · B = C\"),_c('br'),_c('br'),_vm._v(\"0 · 0 = 0\"),_c('br'),_c('br'),_vm._v(\"0 · 1 = 0\"),_c('br'),_c('br'),_vm._v(\"1 · 0 = 0\"),_c('br'),_c('br'),_vm._v(\"1 · 1 = 1\")]),_c('td',[_vm._v(\"A = A\"),_c('br'),_c('br'),_vm._v(\"0 = 1\"),_c('br'),_c('br'),_vm._v(\"1 = 0\")])])])])])])]),_c('p'),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10\",attrs:{\"data-aos\":\"fade-down\"}},[_c('div',{staticClass:\"tarjeta p-4\",staticStyle:{\"background-color\":\"#496D58\"}},[_c('div',{staticClass:\"row justify-content-center\"},[_c('div',{staticClass:\"col-lg-10 mb-lg-0 mb-3 order-2\"},[_c('div',{staticClass:\"text-white\"},[_c('h4',[_vm._v(\"Dato importante\")]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"La negación se expresa con una línea arriba del nombre asignado a la entrada o a la salida o con una comilla, así: A = A'\")])])]),_c('div',{staticClass:\"col-lg-auto mb-lg-0 mb-3\"},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require(\"@/assets/curso/temas/17.svg\"),\"alt\":\"\"}})])])])])]),_c('div',{staticClass:\"titulo-tres\"},[_c('h3',[_vm._v(\"Función lógica\")])]),_c('p',{staticClass:\"mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"Es la expresión algebraica formada por variables binarias que se relacionan mediante las operaciones básicas del álgebra de Boole.\")]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10 mb-lg-0 mb-3\",attrs:{\"data-aos\":\"fade-left\"}},[_c('div',{staticClass:\"tarjeta p-4\",staticStyle:{\"background-color\":\"#D4F0E0\"}},[_c('div',{staticClass:\"row justify-content-center mb-3\"},[_c('div',{staticClass:\"col-lg-10 mb-lg-0 mb-3 order-2\"},[_c('p',{staticClass:\"mb-0\"},[_c('b',[_vm._v(\"Ejemplo:\")]),_c('br'),_vm._v(\"F = a + b (la función sería “a + b” que equivale a la operación booleana “+” o de suma).\"),_c('br'),_vm._v(\"Donde a y b son las variables binarias.\")])]),_c('div',{staticClass:\"col-lg-auto mb-lg-0 mb-3\"},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require(\"@/assets/curso/temas/7.svg\"),\"alt\":\"\"}})])])])])]),_c('div',{staticClass:\"titulo-tres\"},[_c('h3',[_vm._v(\"Tabla de verdad\")])]),_c('p',{staticClass:\"mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"Es una representación gráfica de todos los valores que puede tomar la función lógica para cada una de las posibles combinaciones de las variables de entrada.\")]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10 mb-lg-0 mb-3\",attrs:{\"data-aos\":\"fade-down\"}},[_c('div',{staticClass:\"tarjeta p-4\",staticStyle:{\"background-color\":\"#D4F0E0\"}},[_c('div',{staticClass:\"row justify-content-center mb-3\"},[_c('div',{staticClass:\"col-lg-10 mb-lg-0 mb-3 order-2\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"El número de combinaciones posibles es 2^n, siendo n el número de variables.\"),_c('br'),_c('br'),_c('b',[_vm._v(\"Ejemplo:\")]),_vm._v(\" la tabla para la función lógica F = (A + B) · C sería:\"),_c('br'),_vm._v(\"n = 3 (porque las variables son A, B y C).\"),_c('br'),_vm._v(\"23 = 8 (número de posibles combinaciones y filas que debe tener la tabla).\")])]),_c('div',{staticClass:\"col-lg-auto mb-lg-0 mb-3\"},[_c('img',{staticStyle:{\"width\":\"100px\"},attrs:{\"src\":require(\"@/assets/curso/temas/7.svg\"),\"alt\":\"\"}})])])])])]),_c('p',{staticClass:\"mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"El álgebra de Boole se basa en un conjunto de propiedades y reglas fundamentales que permiten simplificar y analizar expresiones lógicas. Estas reglas son esenciales para optimizar circuitos y resolver problemas lógicos de manera estructurada. A continuación, se presentan las principales propiedades y ejemplos asociados:\")]),_c('div',{staticClass:\"row justify-content-center mb-4 mb-lg-0\"},[_c('div',{staticClass:\"col-lg-7 mb-lg-0\"},[_c('div',{staticClass:\"titulo-sexto color-acento-contenido\",attrs:{\"data-aos\":\"fade-right\"}},[_c('h5',[_vm._v(\"Tabla 4.\")]),_c('span',[_c('i',[_vm._v(\"Las 8 posibles combinaciones\")])])]),_c('div',{staticClass:\"tabla-a color-acento-contenido mb-5\",attrs:{\"data-aos\":\"fade-down\"}},[_c('table',{staticClass:\"text-center\"},[_c('thead',{staticStyle:{\"background-color\":\"#F3F8FF\"}},[_c('tr',[_c('th',{staticStyle:{\"width\":\"100px\"}},[_vm._v(\"Variables o entrada\")]),_c('th',{staticStyle:{\"width\":\"100px\"}},[_vm._v(\"Función lógica o salida\")])])]),_c('tbody',{staticClass:\"bg-white\"},[_c('tr',[_c('td',[_vm._v(\"A B C\")]),_c('td',[_vm._v(\"F = (A + B) · C\")])]),_c('tr',[_c('td',[_vm._v(\"0 0 0\")]),_c('td',[_vm._v(\"0\")])]),_c('tr',[_c('td',[_vm._v(\"0 0 1\")]),_c('td',[_vm._v(\"0\")])]),_c('tr',[_c('td',[_vm._v(\"0 1 0\")]),_c('td',[_vm._v(\"0\")])]),_c('tr',[_c('td',[_vm._v(\"0 1 1\")]),_c('td',[_vm._v(\"1\")])]),_c('tr',[_c('td',[_vm._v(\"1 0 0\")]),_c('td',[_vm._v(\"0\")])]),_c('tr',[_c('td',[_vm._v(\"1 0 1\")]),_c('td',[_vm._v(\"1\")])]),_c('tr',[_c('td',[_vm._v(\"1 1 0\")]),_c('td',[_vm._v(\"0\")])]),_c('tr',[_c('td',[_vm._v(\"1 1 1\")]),_c('td',[_vm._v(\"1\")])])])])])]),_c('div',{staticClass:\"col-lg-4 col-7\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/18.png\"),\"alt\":\"\"}})])]),_c('p',{staticClass:\"mb-4\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"El álgebra de Boole se basa en un conjunto de propiedades y reglas fundamentales que permiten simplificar y analizar expresiones lógicas. Estas reglas son esenciales para optimizar circuitos y resolver problemas lógicos de manera estructurada. A continuación, se presentan las principales propiedades y ejemplos asociados.\")]),_c('div',{staticClass:\"row justify-content-center\"},[_c('div',{staticClass:\"col-lg-7 mb-lg-0\"},[_c('div',{staticClass:\"titulo-sexto color-acento-contenido\",attrs:{\"data-aos\":\"fade-right\"}},[_c('h5',[_vm._v(\"Tabla 5.\")]),_c('span',[_c('i',[_vm._v(\"Propiedades o reglas del álgebra de Boole\")])])]),_c('div',{staticClass:\"tabla-a color-acento-contenido mb-5\",attrs:{\"data-aos\":\"fade-down\"}},[_c('table',{staticClass:\"text-center\"},[_c('thead',{staticStyle:{\"background-color\":\"#F3F8FF\"}},[_c('tr',[_c('th',{staticStyle:{\"width\":\"100px\"}},[_vm._v(\"Propiedad o regla\")]),_c('th',{staticStyle:{\"width\":\"100px\"}},[_vm._v(\"Ejemplo\")])])]),_c('tbody',{staticClass:\"bg-white\"},[_c('tr',[_c('td',[_vm._v(\"Simplificación de negación\")]),_c('td',[_vm._v(\"A = A\")])]),_c('tr',[_c('td',[_vm._v(\"Simplificación de igualdad\")]),_c('td',[_vm._v(\"A + A = A\"),_c('br'),_vm._v(\"A · A = A\")])]),_c('tr',[_c('td',[_vm._v(\"Inversa\")]),_c('td',[_vm._v(\"A + A = 1\"),_c('br'),_vm._v(\"A · A = 0\")])]),_c('tr',[_c('td',[_vm._v(\"Identidad\")]),_c('td',[_vm._v(\"A + 0 = A\"),_c('br'),_vm._v(\"A · 1 = A\"),_c('br'),_vm._v(\"A + 1 = 1\"),_c('br'),_vm._v(\"A · 0 = 0\")])]),_c('tr',[_c('td',[_vm._v(\"Conmutativa\")]),_c('td',[_vm._v(\"A + B = B + A\"),_c('br'),_vm._v(\"A · B = B · A\")])]),_c('tr',[_c('td',[_vm._v(\"Asociativa\")]),_c('td',[_vm._v(\"A + (B + C) = (A + B) + C\"),_c('br'),_vm._v(\"A · (B · C) = (A · B) · C\")])]),_c('tr',[_c('td',[_vm._v(\"Distributiva\")]),_c('td',[_vm._v(\"A · (B + C) = (A · B) + (A · C)\"),_c('br'),_vm._v(\"(A + B) · C = (A · C) + (B · C)\")])]),_c('tr',[_c('td',[_vm._v(\"Más reglas de simplificación o leyes de absorción\")]),_c('td',[_vm._v(\"A + A · B = A\"),_c('br'),_vm._v(\"A · (A + B) = A\")])]),_c('tr',[_c('td',[_vm._v(\"Teorema de Morgan\")]),_c('td',[_vm._v(\"A · B ) = A´ + B´\"),_c('br'),_vm._v(\"A · B )= A´ · B´\")])])])])])]),_c('div',{staticClass:\"col-lg-3 col-7\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/19.png\"),\"alt\":\"\"}})])])])\n}]\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n.curso-main-container.pb-3\n  BannerInterno\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n    .titulo-principal.color-acento-contenido(data-aos=\"flip-up\")\n      .titulo-principal__numero\n        span 2\n      h1 Sistema binario\n    .row.justify-content-center.mb-5.g-0\n      .col-lg-12.mb-lg-0.mb-3(data-aos=\"fade-down\")\n        .p-4(style=\"background-color: #F5E5FE \").h-100\n          .row.justify-content-center.align-items-center.mb-3\n            .col-lg.mb-lg-0.mb-3.order-2: p.mb-0 El sistema binario utiliza solo dos dígitos (0 y 1) para representar cualquier número. Es el sistema que se utiliza como lenguaje para los sistemas electrónicos, gracias a los dos estados o niveles lógicos que se encuentran en los circuitos integrados: abierto o cerrado (1 o 0 lógico).\n            .col-lg-auto.mb-lg-0.mb-3: img(src='@/assets/curso/temas/11.svg', alt='' style='width: 85px')\n    .row.justify-content-center.mb-5\n      .col-lg-10\n        .titulo-sexto.color-acento-contenido(data-aos='fade-right')\n          h5 Figura 1. \n          span #[i Niveles de voltaje en lógica digital]\n        img(src='@/assets/curso/temas/12.svg', alt='Texto alternativo: La imagen muestra los niveles de voltaje lógico en un sistema digital alimentado por VCC. Un nivel alto, representado como 1 - Lógico, se encuentra entre 3.5 V y 5.0 V. Entre 0.8 V y 3.5 V, el voltaje es No Definido, mientras que un nivel bajo, representado como 0 - Lógico, se encuentra entre 0.0 V y 0.8 V. ')(data-aos='fade-left')\n    p.mb-4(data-aos='fade-right') En la electrónica tradicional se usan 5 voltios para el dígito '1' y 0 voltios para el dígito '0'.\n    .tarjeta.p-5.mb-4(style=\"background-color: #D4F0E0 \")\n      p.mb-4(data-aos='fade-right') Ejemplo. Representar 2158 (decimal) en binario\n      .row.justify-content-center.mb-5\n        .col-lg-10\n          .titulo-sexto.color-acento-contenido(data-aos='fade-right')\n            h5 Figura 2. \n            span #[i Conversión de un número decimal a binario]\n          img(src='@/assets/curso/temas/13.svg', alt='Texto alternativo: La figura presenta un diagrama donde se convierte el número decimal 2158 a binario. El proceso muestra una serie de divisiones entre 2')(data-aos='fade-up')\n    .row.justify-content-center.mb-5\n      .col-lg-10(data-aos='fade-down')\n        .p-4(style=\"background-color: #E9F7EF\")\n          p.mb-4 El procedimiento para convertir un número decimal a binario utilizando divisiones sucesivas por 2 es el siguiente:\n          ol.lista-ol--cuadro\n            li.d-flex\n              .lista-ol--cuadro__vineta\n                span(style='color: #12263F; font-weight: bold') 1.\n              | Se divide el número decimal entre 2, obteniendo el cociente y el resto. El resto será uno de los dígitos del número binario.\n            li.d-flex\n              .lista-ol--cuadro__vineta\n                span(style='color: #12263F; font-weight: bold') 2.\n              | Si el resto es 0, se registra un 0 como dígito binario; si el resto es 1, se registra un 1.\n            li.d-flex\n              .lista-ol--cuadro__vineta\n                span(style='color: #12263F; font-weight: bold') 3.\n              | El cociente de la división se toma como el nuevo número decimal.\n            li.d-flex\n              .lista-ol--cuadro__vineta\n                span(style='color: #12263F; font-weight: bold') 4.\n              | Se repite el proceso dividiendo nuevamente por 2, registrando los restos como los dígitos binarios.\n            li.d-flex\n              .lista-ol--cuadro__vineta\n                span(style='color: #12263F; font-weight: bold') 5.\n              | El procedimiento finaliza cuando el cociente alcanza el valor de 0. Los restos obtenidos se leen de abajo hacia arriba para formar el número binario.\n    .row.justify-content-center.mb-5\n      .col-lg-4.mb-lg-0.mb-3(data-aos='fade-right')\n        .tarjeta.p-5.hover.h-100\n          .row.justify-content-center.align-items-center\n              .col-lg.mb-lg-0.mb-3.order-2: p.mb-0.fw-bold Divida el número decimal por 2.\n              .col-lg-auto.mb-lg-0.mb-3: img(src='@/assets/curso/temas/14.svg', alt='' style='width: 30px')\n      .col-lg-4.mb-lg-0.mb-3(data-aos='fade-up')\n        .tarjeta.p-5.hover.h-100\n          .row.justify-content-center.align-items-center\n              .col-lg.mb-lg-0.mb-3.order-2: p.mb-0.fw-bold Si hay resto, escriba 1; si no, 0.\n              .col-lg-auto.mb-lg-0.mb-3: img(src='@/assets/curso/temas/15.svg', alt='' style='width: 30px')\n      .col-lg-4.mb-lg-0.mb-3(data-aos='fade-down')\n        .tarjeta.p-5.hover.h-100\n          .row.justify-content-center.align-items-center\n              .col-lg.mb-lg-0.mb-3.order-2: p.mb-0.fw-bold Continúe hasta que no quede número decimal.\n              .col-lg-auto.mb-lg-0.mb-3: img(src='@/assets/curso/temas/16.svg', alt='' style='width: 30px')\n    .titulo-tres: h3 Álgebra de Boole\n    p.mb-4(data-aos='fade-right') El álgebra de Boole se utiliza para programar circuitos integrados a través de números binarios y realizar operaciones binarias. Esto permite predecir el comportamiento en la entrada y salida del circuito.\n      br\n      br\n      |Incluye tres operaciones fundamentales:\n      .row.justify-content-center.mb-5\n        .col-lg-10\n          .titulo-sexto.color-acento-contenido(data-aos='fade-right')\n            h5 Tabla 3. \n            span #[i Operaciones lógicas básicas]\n          .tabla-a.color-acento-contenido.mb-5(data-aos='fade-left')\n            table.text-center\n              thead(style=\"background-color: #F3F8FF \")\n                tr\n                  th Operación +\n                  th Operación  ⋅ o ∗\n                  th Operación de negación\n              tbody.bg-white\n                tr\n                  td (Es el mismo símbolo de la suma que usualmente usamos, pero no es la misma operación)\n                  td (Es el mismo símbolo del producto o multiplicación que usualmente usamos, pero no es la misma operación)\n                  td (Permite invertir o negar el estado lógico, #[em bit] o dígito así)\n                tr\n                  td Entradas | Salida\n                  td Entradas | Salida\n                  td Entradas | Salida\n                tr\n                  td A + B = C\n                    br\n                    br\n                    |0 + 0 = 0\n                    br\n                    br\n                    |0 + 1 = 1\n                    br\n                    br\n                    |1 + 0 = 1\n                    br\n                    br\n                    |1 + 1 = 1\n                  td A · B = C\n                    br\n                    br\n                    |0 · 0 = 0\n                    br\n                    br\n                    |0 · 1 = 0\n                    br\n                    br\n                    |1 · 0 = 0\n                    br\n                    br\n                    |1 · 1 = 1\n                  td A = A\n                    br\n                    br\n                    |0 = 1\n                    br\n                    br\n                    |1 = 0\n    .row.justify-content-center.mb-5\n      .col-lg-10(data-aos='fade-down')\n        .tarjeta.p-4(style=\"background-color: #496D58 \")\n          .row.justify-content-center\n            .col-lg-10.mb-lg-0.mb-3.order-2\n              .text-white\n                h4 Dato importante\n                p.mb-0 La negación se expresa con una línea arriba del nombre asignado a la entrada o a la salida o con una comilla, así: A = A'\n            .col-lg-auto.mb-lg-0.mb-3: img(src='@/assets/curso/temas/17.svg', alt='' style='width: 100px') \n    .titulo-tres: h3 Función lógica\n    p.mb-4(data-aos='fade-right') Es la expresión algebraica formada por variables binarias que se relacionan mediante las operaciones básicas del álgebra de Boole.\n    .row.justify-content-center.mb-5\n      .col-lg-10.mb-lg-0.mb-3(data-aos='fade-left')\n        .tarjeta.p-4(style=\"background-color: #D4F0E0 \")\n          .row.justify-content-center.mb-3\n            .col-lg-10.mb-lg-0.mb-3.order-2\n              p.mb-0 #[b Ejemplo:]\n                br\n                |F = a + b (la función sería “a + b” que equivale a la operación booleana “+” o de suma).\n                br\n                |Donde a y b son las variables binarias.\n            .col-lg-auto.mb-lg-0.mb-3: img(src='@/assets/curso/temas/7.svg', alt='' style='width: 100px') \n    .titulo-tres: h3 Tabla de verdad\n    p.mb-4(data-aos='fade-right') Es una representación gráfica de todos los valores que puede tomar la función lógica para cada una de las posibles combinaciones de las variables de entrada.\n    .row.justify-content-center.mb-5\n      .col-lg-10.mb-lg-0.mb-3(data-aos='fade-down')\n        .tarjeta.p-4(style=\"background-color: #D4F0E0 \")\n          .row.justify-content-center.mb-3\n            .col-lg-10.mb-lg-0.mb-3.order-2\n              p.mb-0 El número de combinaciones posibles es 2^n, siendo n el número de variables.\n                br\n                br\n                | #[b Ejemplo:] la tabla para la función lógica F = (A + B) · C sería:\n                br\n                |n = 3 (porque las variables son A, B y C).\n                br\n                |23 = 8 (número de posibles combinaciones y filas que debe tener la tabla).\n            .col-lg-auto.mb-lg-0.mb-3: img(src='@/assets/curso/temas/7.svg', alt='' style='width: 100px') \n    p.mb-4(data-aos='fade-right') El álgebra de Boole se basa en un conjunto de propiedades y reglas fundamentales que permiten simplificar y analizar expresiones lógicas. Estas reglas son esenciales para optimizar circuitos y resolver problemas lógicos de manera estructurada. A continuación, se presentan las principales propiedades y ejemplos asociados:\n    .row.justify-content-center.mb-4.mb-lg-0\n      .col-lg-7.mb-lg-0\n        .titulo-sexto.color-acento-contenido(data-aos='fade-right')\n          h5 Tabla 4.\n          span #[i Las 8 posibles combinaciones]\n        .tabla-a.color-acento-contenido.mb-5(data-aos='fade-down')\n          table.text-center\n            thead(style=\"background-color: #F3F8FF \")\n              tr\n                th(style=\"width: 100px \") Variables o entrada\n                th(style=\"width: 100px \") Función lógica o salida\n            tbody.bg-white\n              \n              tr\n                td A B C\n                td F = (A + B) · C\n              tr\n                td 0 0 0\n                td 0\n              tr\n                td 0 0 1\n                td 0\n              tr\n                td 0 1 0\n                td 0\n              tr\n                td 0 1 1\n                td 1\n              tr\n                td 1 0 0\n                td 0\n              tr\n                td 1 0 1\n                td 1\n              tr\n                td 1 1 0\n                td 0\n              tr\n                td 1 1 1\n                td 1\n      .col-lg-4.col-7: img(src='@/assets/curso/temas/18.png', alt='')\n    p.mb-4(data-aos='fade-right') El álgebra de Boole se basa en un conjunto de propiedades y reglas fundamentales que permiten simplificar y analizar expresiones lógicas. Estas reglas son esenciales para optimizar circuitos y resolver problemas lógicos de manera estructurada. A continuación, se presentan las principales propiedades y ejemplos asociados.\n    .row.justify-content-center\n      .col-lg-7.mb-lg-0\n        .titulo-sexto.color-acento-contenido(data-aos='fade-right')\n          h5 Tabla 5.\n          span #[i Propiedades o reglas del álgebra de Boole]\n        .tabla-a.color-acento-contenido.mb-5(data-aos='fade-down')\n          table.text-center\n            thead(style=\"background-color: #F3F8FF \")\n              tr\n                th(style=\"width: 100px \") Propiedad o regla\n                th(style=\"width: 100px \") Ejemplo\n            tbody.bg-white\n              \n              tr\n                td Simplificación de negación\n                td A = A\n              tr\n                td Simplificación de igualdad\n                td A + A = A\n                  br\n                  |A · A = A\n              tr\n                td Inversa\n                td A + A = 1\n                  br\n                  |A · A = 0\n              tr\n                td Identidad\n                td A + 0 = A\n                  br\n                  |A · 1 = A\n                  br\n                  |A + 1 = 1\n                  br\n                  |A · 0 = 0\n              tr\n                td Conmutativa\n                td A + B = B + A\n                  br\n                  |A · B = B · A\n              tr\n                td Asociativa\n                td A + (B + C) = (A + B) + C\n                  br\n                  |A · (B · C) = (A · B) · C\n              tr\n                td Distributiva\n                td A · (B + C) = (A · B) + (A · C)\n                  br\n                  |(A + B) · C = (A · C) + (B · C)\n              tr\n                td Más reglas de simplificación o leyes de absorción\n                td A + A · B = A\n                  br\n                  |A · (A + B) = A\n              tr\n                td Teorema de Morgan\n                td A · B ) = A´ + B´\n                  br\n                  |A · B )= A´ · B´\n      .col-lg-3.col-7: img(src='@/assets/curso/temas/19.png', alt='')\n\n</template>\n\n<script>\nexport default {\n  name: 'Tema2',\n  data: () => ({\n    // variables de vue\n  }),\n  mounted() {\n    this.$nextTick(() => {\n      this.$aosRefresh()\n    })\n  },\n  updated() {\n    this.$aosRefresh()\n  },\n}\n</script>\n\n<style lang=\"sass\"></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tema2.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tema2.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Tema2.vue?vue&type=template&id=0a6f497c&lang=pug\"\nimport script from \"./Tema2.vue?vue&type=script&lang=js\"\nexport * from \"./Tema2.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}